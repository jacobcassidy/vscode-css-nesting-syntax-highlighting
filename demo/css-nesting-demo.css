/**
* CSS NESTING DEMO
*/

/**
* Nesting without the `&` nesting selector
* See: https://developer.mozilla.org/en-US/docs/Web/CSS/Nesting_selector
*/

.parent-rule {
  margin: 0;
  .child-rule {
    margin: 0;
  }
}

.parent-rule {
  text-decoration: none;
  :hover {
    text-decoration: underline;
  }
}

/**
* Nesting with the `&` nesting selector
* See: https://developer.mozilla.org/en-US/docs/Web/CSS/Nesting_selector
*/

.parent-rule {
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

.example {
  font-family: system-ui;
  font-size: 1.2rem;
  & > a {
    color: tomato;
    &:hover,
    &:focus {
      color: ivory;
      background-color: tomato;
    }
  }
}

/**
 * Appending the `&` nesting selector
 * See: https://developer.mozilla.org/en-US/docs/Web/CSS/Nesting_selector#appending_the_nesting_selector
 */

.card {
  /* .card styles */
  margin: 0;
  .featured & {
    /* .featured .card styles */
    margin: 0;
  }
}

.card {
  /* .card styles */
  margin: 0;
  .featured & & & {
    /* .featured .card .card .card styles */
    margin: 0;
  }
}

.card {
  padding: 0.5rem;
  border: 1px solid black;
  border-radius: 0.5rem;
  & h2 {
    /* equivalent to `.card h2` */
    color: slateblue;
    .featured & {
      /* equivalent to `:is(.card h2):is(.featured h2)` */
      color: tomato;
    }
  }
}

/**
 * Appending the `&` nesting selector as a compound selector
 */

.example {
  section& {
    /* equivalent to `section.example` */
    margin: 0;
  }
  .class& {
    /* equivalent to `.class.example` */
    padding: 0;
  }
  #id& {
    /* equivalent to `#id.example` */
    border: 1px solid black;
  }
  @media screen and (max-width: 1100px) {
    section& {
      margin: 0;
    }
    .class& {
      padding: 0;
    }
    #id& {
      margin: 0;
    }
  }
}

/**
* Using `&` outside nested rule
* If not used in nested style rule, the & nesting selector represents the scoping root.
* See: https://developer.mozilla.org/en-US/docs/Web/CSS/Nesting_selector#using_outside_nested_rule
*/

& {
  color: blue;
  font-weight: bold;
}

&:hover {
  background-color: wheat;
}

/**
 * Nesting `@media` at-rule
 * See: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting/Nesting_at-rules#nesting_media_at-rule
 */

/* Typical way to write Nested CSS */
.foo {
  display: grid;
  @media (orientation: landscape) {
    grid-auto-flow: column;
  }
}
/* Expanded nested CSS as the browser parses it */
.foo {
  display: grid;
  @media (orientation: landscape) {
    & {
      grid-auto-flow: column;
    }
  }
}

/**
 * Multiple nested `@media` at-rule
 * See: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting/Nesting_at-rules#multiple_nested_media_at-rules
 */

.foo {
  display: grid;
  @media (orientation: landscape) {
    grid-auto-flow: column;
    @media (min-width: 1024px) {
      max-inline-size: 1024px;
    }
  }
}

/* Equivalent without nesting */
.foo {
  display: grid;
}
@media (orientation: landscape) {
  .foo {
    grid-auto-flow: column;
  }
}
@media (orientation: landscape) and (min-width: 1024px) {
  .foo {
    max-inline-size: 1024px;
  }
}

/**
 * Nesting Cascade Layers (`@layer`)
 * See: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting/Nesting_at-rules#nesting_cascade_layers_layer
 */

@layer base {
  @layer support;
}

.foo {
  @layer base {
    block-size: 100%;
    @layer support {
      & .bar {
        min-block-size: 100%;
      }
    }
  }
}
/* Equivalent without nesting */
@layer base {
  .foo {
    block-size: 100%;
  }
}
@layer base.support {
  .foo .bar {
    min-block-size: 100%;
  }
}

/**
* Creating complex selectors with CSS nesting
* See: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_selectors/Selectors_and_combinators#creating_complex_selectors_with_css_nesting
*/
h2 {
  & + p {
    & ~ p {
      font-style: italic;
    }
    & + p {
      color: red;
    }
  }
}
.myClass {
  & + p {
    text-decoration: underline;
  }
}
#myId {
  & > .myClass {
    outline: 3px dashed red;
  }
  > p #anotherId {
    font-size: 1.1rem;
  }
}

/**
* Nesting and compound selectors
* See: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting/Using_CSS_nesting#compound_selectors
*/

.notice {
  color: black;
  padding: 1rem;
  .notice-heading:before {
    /* equivalent to `.notice .notice-heading:before` */
    content: "ℹ︎ ";
  }
  &.warning {
    /* equivalent to `.notice.warning` */
    background-color: #d81b60;
    border-color: #d81b60;
    color: white;
    .warning-heading:before {
      /* equivalent to `.notice.warning .warning-heading:before` */
      content: "! ";
    }
  }
  &.success {
    /* equivalent to `.notice.success` */
    background-color: #004d40;
    border-color: #004d40;
    color: white;
    .success-heading:before {
      /* equivalent to `.notice.success .success-heading:before` */
      content: "✓ ";
    }
  }
}

.notice {
  color: black;
  padding: 1rem;
  .notice-heading:before {
    /* equivalent to `.notice .notice-heading:before` */
    content: "ℹ︎ ";
  }
  .warning {
    /* equivalent to `.notice.warning` */
    background-color: #d81b60;
    border-color: #d81b60;
    color: white;
    .warning-heading:before {
      /* equivalent to `.notice.warning .warning-heading:before` */
      content: "! ";
    }
  }
  .success {
    /* equivalent to `.notice.success` */
    background-color: #004d40;
    border-color: #004d40;
    color: white;
    .success-heading:before {
      /* equivalent to `.notice.success .success-heading:before` */
      content: "✓ ";
    }
  }
}
